name: Container CI
on: 
  push:
  workflow_dispatch:

env: 
  ACR_LOGON_SERVER: ${{secrets.AZ_CONTAINER_REGISTRY_NAME}}
  IMAGE_NAME: ${{secrets.AZ_CONTAINER_REGISTRY_NAME}}/aoai/pdf-chat-app:${{github.sha}}

jobs:
  
  build-deploy-image:
  
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the repo
      - name: 'Checkout Github Action'
        uses: actions/checkout@master

      - name: 'Build & Push image'
        uses: azure/docker-login@v2
        with:
          login-server: ${{env.ACR_LOGON_SERVER}}
          username: ${{secrets.AZ_SP_CLIENT_ID}}
          password: ${{secrets.AZ_SP_SECRET}}

      - run: docker build . -t ${{env.IMAGE_NAME}} -f ./dockerfile

      - run: docker push ${{env.IMAGE_NAME}}

  deploy-to-aks:

    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    needs: build-deploy-image

    #env:
      #NAMESPACE: dummy

    steps:

      - uses: actions/checkout@main

      # Set the target Azure Kubernetes Service (AKS) Cluster
      - uses: azure/aks-set-context@v3.0
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'
          cluster-name: ${{secrets.AKS_NAME}}
          resource-group: ${{secrets.AKS_RESOURCE_GROUP}}

      # Create namespace if doesn't exist
      # - run: |
      #     kubectl create namespae ${{env.NAMESPACE}} --dry-run -o json | kubectl apply -f -

      # Create image pull secret for ACR
      - uses: azure/k8s-create-secret@v4.0
        with:
          container-registry-url: ${{env.ACR_LOGON_SERVER}}
          container-registry-username: ${{ secrets.AZ_SP_CLIENT_ID }}
          container-registry-password: ${{ secrets.AZ_SP_SECRET }}
          secret-name: ${{secrets.AKS_SECRET}}
          #namespace: ${{env.NAMESPACE}}

      # Deploy app to AKS
      - uses: azure/k8s-deploy@v4.9
        with: 
          manifests: |
            deploy/manifests/deployment.yml
            deploy/manifests/service.yml
          images: |
            ${{env.IMAGE_NAME}}
          imagepullsecrets: |
            ${{secrets.AKS_SECRET}}
          #namespace: ${{env.NAMESPACE}}
        
        
      
    
